version: "3.5"
services:
  backend:
    build: backend
    env_file: .env
    container_name: ${BACKEND_CONTAINER_NAME}
    volumes:
      - ./backend:/backend
    command: sh scripts/entrypoint.sh
    ports:
      - 8080:8080 # exposed without the proxy
    depends_on:
     - db
    networks:
      - crcc-docker-network

  db:
    env_file: .env
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:13-alpine
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_USER: 'crcc_user'
      POSTGRES_PASSWORD: '123'
      POSTGRES_DB: 'crcc_db'
    volumes:
      - "./.docker-data/dbdata:/var/lib/postgresql/data"
    networks:
     - crcc-docker-network

  frontend:
    build: frontend
    container_name: ${FRONTEND_CONTAINER_NAME}
    restart: always
    volumes:
      - ./frontend:/frontend
    ports:
      - ${FRONTEND_APP_PORT}:3000
    command: sh -c "npm install && npm run dev"
    networks:
      - crcc-docker-network

networks:
  crcc-docker-network:
    name: ${DOCKER_NETWORK_NAME}
    external: true
    driver: bridge
